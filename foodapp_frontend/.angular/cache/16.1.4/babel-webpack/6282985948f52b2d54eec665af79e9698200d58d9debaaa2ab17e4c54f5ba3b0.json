{"ast":null,"code":"import { Customer } from '../customer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateCustomerComponent {\n  constructor(service, route, router) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.customer = new Customer();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.service.getCustomerById(this.id).subscribe(data => {\n      this.customer = data;\n    });\n  }\n  onSubmit() {\n    this.service.updateCustomer(this.id, this.customer).subscribe(data => {\n      this.gotoProfile(data);\n    });\n  }\n  gotoProfile(customer) {\n    this.router.navigate(['profile', customer]);\n  }\n}\nUpdateCustomerComponent.ɵfac = function UpdateCustomerComponent_Factory(t) {\n  return new (t || UpdateCustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCustomerComponent,\n  selectors: [[\"app-update-customer\"]],\n  decls: 29,\n  vars: 7,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"street\", \"name\", \"street\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"city\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"state\", \"name\", \"state\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"zipCode\", \"name\", \"zipCode\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function UpdateCustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Update User Record\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateCustomerComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.customer.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.customer.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.customer.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Street\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.customer.addressId.street = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"label\", 9);\n      i0.ɵɵtext(18, \"State\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.customer.addressId.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"label\", 9);\n      i0.ɵɵtext(21, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.customer.addressId.state = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"label\", 9);\n      i0.ɵɵtext(24, \"Zipcode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateCustomerComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.customer.addressId.zipCode = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementStart(27, \"button\", 14);\n      i0.ɵɵtext(28, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.addressId.street);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.addressId.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.addressId.state);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.addressId.zipCode);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Customer","UpdateCustomerComponent","constructor","service","route","router","customer","ngOnInit","id","snapshot","params","getCustomerById","subscribe","data","onSubmit","updateCustomer","gotoProfile","navigate","i0","ɵɵdirectiveInject","i1","CustomerService","i2","ActivatedRoute","Router","selectors","decls","vars","consts","template","UpdateCustomerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateCustomerComponent_Template_form_ngSubmit_3_listener","UpdateCustomerComponent_Template_input_ngModelChange_7_listener","$event","name","UpdateCustomerComponent_Template_input_ngModelChange_10_listener","email","UpdateCustomerComponent_Template_input_ngModelChange_13_listener","password","UpdateCustomerComponent_Template_input_ngModelChange_16_listener","addressId","street","UpdateCustomerComponent_Template_input_ngModelChange_19_listener","city","UpdateCustomerComponent_Template_input_ngModelChange_22_listener","state","UpdateCustomerComponent_Template_input_ngModelChange_25_listener","zipCode","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/update-customer/update-customer.component.ts","/home/coder/project/workspace/foodapp_frontend/src/app/update-customer/update-customer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer } from '../customer';\n\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit{\n\n  id!:number;\n  customer:Customer=new Customer();\n\n  constructor(private service:CustomerService, private route:ActivatedRoute, private router:Router){}\n\n  ngOnInit(): void {\n    this.id=this.route.snapshot.params['id'];\n\n    this.service.getCustomerById(this.id).subscribe(data=>{\n      this.customer=data;\n    });\n  }\n\n  onSubmit(){\n    this.service.updateCustomer(this.id,this.customer).subscribe((data : any)=>{\n      this.gotoProfile(data);\n    })\n  }\n\n  gotoProfile(customer : any)\n  {\n    this.router.navigate(['profile',customer])\n  }\n\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h1>Update User Record</h1>\n    <form (ngSubmit) = \"onSubmit()\"> \n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" [(ngModel)]=\"customer.name\">\n          \n          <label for=\"email\">Email</label>\n          <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"customer.email\">\n\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"customer.password\">\n       \n\n            <label for=\"address\">Street</label>\n            <input type=\"text\" class=\"form-control\" id=\"street\" name=\"street\" [(ngModel)]=\"customer.addressId.street\">\n\n            <label for=\"address\">State</label>\n            <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city\" [(ngModel)]=\"customer.addressId.city\">\n\n            <label for=\"address\">City</label>\n            <input type=\"text\" class=\"form-control\" id=\"state\" name=\"state\" [(ngModel)]=\"customer.addressId.state\">\n\n            <label for=\"address\">Zipcode</label>\n            <input type=\"text\" class=\"form-control\" id=\"zipCode\" name=\"zipCode\" [(ngModel)]=\"customer.addressId.zipCode\">\n          <br>\n        <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n\n</div> \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}