{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"@angular/forms\";\nexport class AdminloginComponent {\n  constructor(http, router, authService) {\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.email = '';\n    this.password = '';\n    this.defaultEmail = 'admin@gmail.com';\n    this.defaultPassword = 'admin';\n  }\n  adminlogin() {\n    const loginData = {\n      email: this.email,\n      password: this.password\n    };\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    // Check default credentials in the frontend\n    if (this.defaultEmail === this.email && this.defaultPassword === this.password) {\n      // Redirect to the Adminpanel component\n      this.authService.setAuthenticated(true, 'admin'); // Set the user type as 'admin'\n      this.router.navigate(['/adminpanel']);\n      return;\n    }\n    // If not default credentials, send the login request to the backend\n    this.http.post('https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io/adminLogin', loginData, {\n      headers,\n      observe: 'response'\n    }).subscribe(response => {\n      console.log(response);\n      if (response.status === 200) {\n        // Login successful, store the admin name in AdminService\n        // Redirect to the Adminpanel component\n        this.authService.setAuthenticated(true, 'admin'); // Set the user type as 'admin'\n        this.router.navigate(['/adminpanel']);\n      }\n    }, error => {\n      if (error.status === 401) {\n        // Show an alert for invalid credentials\n        alert('Invalid credentials. Please try again.');\n      } else {\n        console.log(error);\n      }\n    });\n  }\n}\nAdminloginComponent.ɵfac = function AdminloginComponent_Factory(t) {\n  return new (t || AdminloginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nAdminloginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminloginComponent,\n  selectors: [[\"app-adminlogin\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"body\"], [1, \"container\"], [1, \"wrapper\"], [1, \"title\"], [3, \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"email\", \"id\", \"floatingInput\", \"name\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"floatingInput\"], [1, \"fas\", \"fa-user\"], [\"type\", \"password\", \"id\", \"floatingInput\", \"name\", \"password\", \"placeholder\", \"name@example.com\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fas\", \"fa-lock\"], [\"type\", \"submit\", \"id\", \"login\", \"value\", \"Login\"]],\n  template: function AdminloginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\");\n      i0.ɵɵtext(5, \"Admin Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminloginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.adminlogin();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminloginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵelement(10, \"i\", 8);\n      i0.ɵɵtext(11, \" Email address\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminloginComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"label\", 7);\n      i0.ɵɵelement(15, \"i\", 10);\n      i0.ɵɵtext(16, \" Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\");\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 640px;\\n  padding: 0 20px;\\n  margin: 20vh auto;\\n\\n}\\n\\n@media (max-width: 768px) {\\n  .container[_ngcontent-%COMP%] {\\n    margin: 20vh auto;\\n  }\\n}\\n\\n@media (max-width: 1000px) {\\n  .container[_ngcontent-%COMP%] {\\n    max-width: 80%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW5sb2dpbi9hZG1pbmxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQkFBaUI7O0FBRW5COztBQUVBO0VBQ0U7SUFDRSxpQkFBaUI7RUFDbkI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsY0FBYztFQUNoQjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA2NDBweDtcbiAgcGFkZGluZzogMCAyMHB4O1xuICBtYXJnaW46IDIwdmggYXV0bztcblxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAyMHZoIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpHeaders","AdminloginComponent","constructor","http","router","authService","email","password","defaultEmail","defaultPassword","adminlogin","loginData","headers","setAuthenticated","navigate","post","observe","subscribe","response","console","log","status","error","alert","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","AdminloginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminloginComponent_Template_form_ngSubmit_6_listener","AdminloginComponent_Template_input_ngModelChange_8_listener","$event","ɵɵelement","AdminloginComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/adminlogin/adminlogin.component.ts","/home/coder/project/workspace/foodapp_frontend/src/app/adminlogin/adminlogin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n  styleUrls: ['./adminlogin.component.css']\n})\nexport class AdminloginComponent {\n  email = '';\n  password = '';\n  defaultEmail = 'admin@gmail.com';\n  defaultPassword = 'admin';\n\n  constructor(private http: HttpClient, private router: Router, private authService: AuthService) {}\n\n  adminlogin(): void {\n    const loginData = {\n      email: this.email,\n      password: this.password\n    };\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    // Check default credentials in the frontend\n    if (this.defaultEmail === this.email && this.defaultPassword === this.password) {\n      // Redirect to the Adminpanel component\n      this.authService.setAuthenticated(true, 'admin'); // Set the user type as 'admin'\n      this.router.navigate(['/adminpanel']);\n      return;\n    }\n\n    // If not default credentials, send the login request to the backend\n    this.http.post<any>('https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io/adminLogin', loginData, { headers, observe: 'response' }).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.status === 200) {\n          // Login successful, store the admin name in AdminService\n          // Redirect to the Adminpanel component\n          this.authService.setAuthenticated(true, 'admin'); // Set the user type as 'admin'\n          this.router.navigate(['/adminpanel']);\n        }\n      },\n      (error: HttpErrorResponse) => {\n        if (error.status === 401) {\n          // Show an alert for invalid credentials\n          alert('Invalid credentials. Please try again.');\n        } else {\n          console.log(error);\n        }\n      }\n    );\n  }\n}","<div class=\"body\">\n  <div class=\"container\">\n    <div class=\"wrapper\">\n      <div class=\"title\"><span>Admin Login</span></div>\n\n      <form (ngSubmit)=\"adminlogin()\">\n        <div class=\"form-floating mb-3\">\n          <input type=\"email\" class=\"form-control\" id=\"floatingInput\" name=\"email\" placeholder=\"name@example.com\" [(ngModel)]=\"email\">\n          <label for=\"floatingInput\"> <i class=\"fas fa-user\"></i>  Email address</label>\n        </div>\n\n        <div class=\"form-floating mb-3\">\n          <input type=\"password\" class=\"form-control\" id=\"floatingInput\" name=\"password\" placeholder=\"name@example.com\" [(ngModel)]=\"password\">\n          <label for=\"floatingInput\"> <i class=\"fas fa-lock\"></i> Password</label>\n        </div>\n\n        <div>\n          <input type=\"submit\" id=\"login\" value=\"Login\">\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;;;;;;AASjF,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,WAAwB;IAA1E,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IALjF,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,YAAY,GAAG,iBAAiB;IAChC,KAAAC,eAAe,GAAG,OAAO;EAEwE;EAEjGC,UAAUA,CAAA;IACR,MAAMC,SAAS,GAAG;MAChBL,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IACD,MAAMK,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IAEvE;IACA,IAAI,IAAI,CAACQ,YAAY,KAAK,IAAI,CAACF,KAAK,IAAI,IAAI,CAACG,eAAe,KAAK,IAAI,CAACF,QAAQ,EAAE;MAC9E;MACA,IAAI,CAACF,WAAW,CAACQ,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;MAClD,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC;;IAGF;IACA,IAAI,CAACX,IAAI,CAACY,IAAI,CAAM,8EAA8E,EAAEJ,SAAS,EAAE;MAAEC,OAAO;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC,CAACC,SAAS,CACvJC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3B;QACA;QACA,IAAI,CAAChB,WAAW,CAACQ,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;QAClD,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;IAEzC,CAAC,EACAQ,KAAwB,IAAI;MAC3B,IAAIA,KAAK,CAACD,MAAM,KAAK,GAAG,EAAE;QACxB;QACAE,KAAK,CAAC,wCAAwC,CAAC;OAChD,MAAM;QACLJ,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;;IAEtB,CAAC,CACF;EACH;;AA3CWrB,mBAAmB,C;mBAAnBA,mBAAmB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAAnB9B,mBAAmB,C;QAAnBA,mBAAmB;EAAA+B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVhCd,EAAA,CAAAgB,cAAA,aAAkB;MAGahB,EAAA,CAAAiB,MAAA,kBAAW;MAAAjB,EAAA,CAAAkB,YAAA,EAAO;MAE3ClB,EAAA,CAAAgB,cAAA,cAAgC;MAA1BhB,EAAA,CAAAmB,UAAA,sBAAAC,sDAAA;QAAA,OAAYL,GAAA,CAAA7B,UAAA,EAAY;MAAA,EAAC;MAC7Bc,EAAA,CAAAgB,cAAA,aAAgC;MAC0EhB,EAAA,CAAAmB,UAAA,2BAAAE,4DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAjC,KAAA,GAAAwC,MAAA;MAAA,EAAmB;MAA3HtB,EAAA,CAAAkB,YAAA,EAA4H;MAC5HlB,EAAA,CAAAgB,cAAA,eAA2B;MAAChB,EAAA,CAAAuB,SAAA,YAA2B;MAAEvB,EAAA,CAAAiB,MAAA,sBAAa;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MAGhFlB,EAAA,CAAAgB,cAAA,cAAgC;MACgFhB,EAAA,CAAAmB,UAAA,2BAAAK,6DAAAF,MAAA;QAAA,OAAAP,GAAA,CAAAhC,QAAA,GAAAuC,MAAA;MAAA,EAAsB;MAApItB,EAAA,CAAAkB,YAAA,EAAqI;MACrIlB,EAAA,CAAAgB,cAAA,gBAA2B;MAAChB,EAAA,CAAAuB,SAAA,aAA2B;MAACvB,EAAA,CAAAiB,MAAA,iBAAQ;MAAAjB,EAAA,CAAAkB,YAAA,EAAQ;MAG1ElB,EAAA,CAAAgB,cAAA,WAAK;MACHhB,EAAA,CAAAuB,SAAA,iBAA8C;MAChDvB,EAAA,CAAAkB,YAAA,EAAM;;;MAXoGlB,EAAA,CAAAyB,SAAA,GAAmB;MAAnBzB,EAAA,CAAA0B,UAAA,YAAAX,GAAA,CAAAjC,KAAA,CAAmB;MAKbkB,EAAA,CAAAyB,SAAA,GAAsB;MAAtBzB,EAAA,CAAA0B,UAAA,YAAAX,GAAA,CAAAhC,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}