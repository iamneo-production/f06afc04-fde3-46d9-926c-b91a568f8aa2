{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantdataService {\n  constructor(http) {\n    this.http = http;\n    this.restaurantId = 0;\n    this.baseUrl = 'https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io';\n  }\n  restaurants() {\n    return this.http.get(`${this.baseUrl}/restaurant`);\n  }\n  getRestaurantById(id) {\n    return this.http.get(`${this.baseUrl}/restaurant/${id}`);\n  }\n  updateRestaurant(id, restaurant) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post(`${this.baseUrl}/restaurant/updatedetails`, JSON.stringify(restaurant), {\n      headers: headers\n    });\n  }\n  getRestaurantByName(name) {\n    return this.http.get(`${this.baseUrl}/restaurant/name?name=${name}`);\n  }\n  getRestaurantsByCuisine(cuisineType) {\n    return this.http.get(`${this.baseUrl}/restaurant/cuisine?cuisineType=${cuisineType}`);\n  }\n}\nRestaurantdataService.ɵfac = function RestaurantdataService_Factory(t) {\n  return new (t || RestaurantdataService)(i0.ɵɵinject(i1.HttpClient));\n};\nRestaurantdataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestaurantdataService,\n  factory: RestaurantdataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","RestaurantdataService","constructor","http","restaurantId","baseUrl","restaurants","get","getRestaurantById","id","updateRestaurant","restaurant","headers","set","post","JSON","stringify","getRestaurantByName","name","getRestaurantsByCuisine","cuisineType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/restaurantdata.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Restaurant } from './restaurant.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantdataService {\n  restaurantId:number = 0;\n  \n  baseUrl = 'https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io';\n\n  constructor(private http: HttpClient) {}\n\n  restaurants(): Observable<Restaurant[]> {\n    return this.http.get<Restaurant[]>(`${this.baseUrl}/restaurant`);\n  }\n\n  getRestaurantById(id: number): Observable<Restaurant> {\n    return this.http.get<Restaurant>(`${this.baseUrl}/restaurant/${id}`);\n  }\n\n  updateRestaurant(id: number, restaurant: Restaurant): Observable<any> {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post(`${this.baseUrl}/restaurant/updatedetails`, JSON.stringify(restaurant), { headers: headers });\n  }\n\n  getRestaurantByName(name: string): Observable<Restaurant> {\n    return this.http.get<Restaurant>(`${this.baseUrl}/restaurant/name?name=${name}`);\n  }\n\n  getRestaurantsByCuisine(cuisineType: string): Observable<Restaurant[]> {\n    return this.http.get<Restaurant[]>(`${this.baseUrl}/restaurant/cuisine?cuisineType=${cuisineType}`);\n  }\n}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,YAAY,GAAU,CAAC;IAEvB,KAAAC,OAAO,GAAG,mEAAmE;EAEtC;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACF,OAAO,aAAa,CAAC;EAClE;EAEAG,iBAAiBA,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,eAAeI,EAAE,EAAE,CAAC;EACtE;EAEAC,gBAAgBA,CAACD,EAAU,EAAEE,UAAsB;IACjD,IAAIC,OAAO,GAAG,IAAIZ,WAAW,EAAE,CAACa,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACvE,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,2BAA2B,EAAEU,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC;EACrH;EAEAK,mBAAmBA,CAACC,IAAY;IAC9B,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,yBAAyBa,IAAI,EAAE,CAAC;EAClF;EAEAC,uBAAuBA,CAACC,WAAmB;IACzC,OAAO,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACF,OAAO,mCAAmCe,WAAW,EAAE,CAAC;EACrG;;AA1BWnB,qBAAqB,C;mBAArBA,qBAAqB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArBvB,qBAAqB,C;SAArBA,qBAAqB;EAAAwB,OAAA,EAArBxB,qBAAqB,CAAAyB,IAAA;EAAAC,UAAA,EAFpB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}