{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MenuService {\n  constructor(httpService) {\n    this.httpService = httpService;\n    this.apiAvailable = true;\n    this.order = [];\n  }\n  getMenu() {\n    if (!this.apiAvailable) return this.getMenuFromJSON();\n    return this.httpService.get('http://localhost:8080/menu-item');\n  }\n  getMenuFromJSON() {\n    return this.httpService.get('/assets/menu/menu.json');\n  }\n  getTotalAmount() {\n    let totalAmount = 0;\n    this.order.forEach(orderItem => {\n      totalAmount += orderItem.price * orderItem.quantity;\n    });\n    return totalAmount;\n  }\n  removeItem(orderId) {\n    const index = this.order.findIndex(orderItem => orderItem.id === orderId);\n    if (index !== -1) {\n      this.order.splice(index, 1);\n    }\n  }\n}\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)(i0.ɵɵinject(i1.HttpClient));\n};\nMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MenuService","constructor","httpService","apiAvailable","order","getMenu","getMenuFromJSON","get","getTotalAmount","totalAmount","forEach","orderItem","price","quantity","removeItem","orderId","index","findIndex","id","splice","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/menu/menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Order } from '../Order';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FoodItem } from '../FoodItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n  constructor(private httpService: HttpClient) { }\n\n  apiAvailable:boolean = true;\n\n  order:Order[] = [];\n\n  getMenu() : Observable<FoodItem[]> {\n    if(! this.apiAvailable)\n      return this.getMenuFromJSON();\n      \n    return this.httpService.get<FoodItem[]>('http://localhost:8080/menu-item');\n  }\n\n  getMenuFromJSON() : Observable<FoodItem[]> {\n    return this.httpService.get<FoodItem[]>('/assets/menu/menu.json');\n  }\n\n  getTotalAmount(){\n    let totalAmount:number = 0;\n    this.order.forEach(orderItem => {\n      totalAmount += orderItem.price*orderItem.quantity;\n    });\n    return totalAmount;\n  }\n\n  removeItem(orderId: number) {\n    const index = this.order.findIndex(orderItem => orderItem.id === orderId);\n    if (index !== -1) {\n      this.order.splice(index, 1);\n    }\n  }\n\n}"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAE/B,KAAAC,YAAY,GAAW,IAAI;IAE3B,KAAAC,KAAK,GAAW,EAAE;EAJ6B;EAM/CC,OAAOA,CAAA;IACL,IAAG,CAAE,IAAI,CAACF,YAAY,EACpB,OAAO,IAAI,CAACG,eAAe,EAAE;IAE/B,OAAO,IAAI,CAACJ,WAAW,CAACK,GAAG,CAAa,iCAAiC,CAAC;EAC5E;EAEAD,eAAeA,CAAA;IACb,OAAO,IAAI,CAACJ,WAAW,CAACK,GAAG,CAAa,wBAAwB,CAAC;EACnE;EAEAC,cAAcA,CAAA;IACZ,IAAIC,WAAW,GAAU,CAAC;IAC1B,IAAI,CAACL,KAAK,CAACM,OAAO,CAACC,SAAS,IAAG;MAC7BF,WAAW,IAAIE,SAAS,CAACC,KAAK,GAACD,SAAS,CAACE,QAAQ;IACnD,CAAC,CAAC;IACF,OAAOJ,WAAW;EACpB;EAEAK,UAAUA,CAACC,OAAe;IACxB,MAAMC,KAAK,GAAG,IAAI,CAACZ,KAAK,CAACa,SAAS,CAACN,SAAS,IAAIA,SAAS,CAACO,EAAE,KAAKH,OAAO,CAAC;IACzE,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACZ,KAAK,CAACe,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;EAE/B;;AAhCWhB,WAAW,C;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}