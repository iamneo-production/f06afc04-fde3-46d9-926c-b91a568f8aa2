{"ast":null,"code":"import { Order } from '../order.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../order.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction OrderHistoryComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function OrderHistoryComponent_tr_18_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.reorder());\n    });\n    i0.ɵɵtext(17, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.orderId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.menuItemId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.restaurantId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.totalCost);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.deliveryAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.deliveryTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.status);\n  }\n}\nexport class OrderHistoryComponent {\n  constructor(service, router, activatedRoute, http) {\n    this.service = service;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.http = http;\n    this.order = [];\n    this.selectedOrderIds = [];\n  }\n  ngOnInit() {\n    this.loadOrder();\n  }\n  loadOrder() {\n    const customerId = Number(this.activatedRoute.snapshot.paramMap.get(\"customerId\"));\n    console.log(\"customerId:\", customerId);\n    this.service.getOrderByCustomerId(customerId).subscribe(response => {\n      if (Array.isArray(response) && response.every(item => item instanceof Order)) {\n        this.order = response;\n        console.error('Invalid API response format:', response);\n        this.order = [];\n      }\n    }, error => {\n      console.error('Error fetching orders:', error);\n      this.order = [];\n    });\n  }\n  reorder() {\n    // Check if any orders are selected\n    if (this.selectedOrderIds.length === 0) {\n      console.log('No orders selected for reorder.');\n      return;\n    }\n    // Pass the selected order IDs to the cart page for reordering\n    this.router.navigate(['/cart'], {\n      queryParams: {\n        orderIds: this.selectedOrderIds.join(',')\n      }\n    });\n  }\n}\nOrderHistoryComponent.ɵfac = function OrderHistoryComponent_Factory(t) {\n  return new (t || OrderHistoryComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nOrderHistoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OrderHistoryComponent,\n  selectors: [[\"app-order-history\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-btn-primary\", 3, \"click\"]],\n  template: function OrderHistoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"Order Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"MenuItem Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Restaurant Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Total Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Delivery Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 1);\n      i0.ɵɵtext(14, \"Delivery Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 1);\n      i0.ɵɵtext(16, \"Status\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, OrderHistoryComponent_tr_18_Template, 18, 7, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.order);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\"table[_ngcontent-%COMP%]{\\n    background-color: red;\\n    color: white;\\n    text-align: center;\\n    justify-content: center;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 1000px;\\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb3JkZXItaGlzdG9yeS9vcmRlci1oaXN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixhQUFhOztBQUVqQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB3aWR0aDogMTAwMHB4O1xuXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Order","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","OrderHistoryComponent_tr_18_Template_button_click_16_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","reorder","ɵɵadvance","ɵɵtextInterpolate","order_r1","orderId","menuItemId","restaurantId","totalCost","deliveryAddress","deliveryTime","status","OrderHistoryComponent","constructor","service","router","activatedRoute","http","order","selectedOrderIds","ngOnInit","loadOrder","customerId","Number","snapshot","paramMap","get","console","log","getOrderByCustomerId","subscribe","response","Array","isArray","every","item","error","length","navigate","queryParams","orderIds","join","ɵɵdirectiveInject","i1","OrderService","i2","Router","ActivatedRoute","i3","HttpClient","selectors","decls","vars","consts","template","OrderHistoryComponent_Template","rf","ctx","ɵɵtemplate","OrderHistoryComponent_tr_18_Template","ɵɵproperty"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/order-history/order-history.component.ts","/home/coder/project/workspace/foodapp_frontend/src/app/order-history/order-history.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OrderService } from '../order.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Order } from '../order.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.component.html',\n  styleUrls: ['./order-history.component.css']\n})\nexport class OrderHistoryComponent {\n  \n\n  order: Order[] =[];\n  selectedOrderIds: number[] = [];\n\n\n  constructor(private service:OrderService,private router:Router, private activatedRoute : ActivatedRoute,private http: HttpClient){}\n\n  ngOnInit(): void {\n    this.loadOrder();\n  }\n\n  loadOrder(): void {\n    const customerId = Number(this.activatedRoute.snapshot.paramMap.get(\"customerId\"));\n    console.log(\"customerId:\", customerId);\n\n    this.service.getOrderByCustomerId(customerId).subscribe(\n      (response) => {\n        if (Array.isArray(response) && response.every(item => item instanceof Order)) {\n          this.order = response; \n          console.error('Invalid API response format:', response);\n          this.order = []; \n        }\n      },\n      (error) => {\n        console.error('Error fetching orders:', error);\n        this.order = [];\n      }\n    );\n  }\n\n  reorder(): void {\n    // Check if any orders are selected\n    if (this.selectedOrderIds.length === 0) {\n      console.log('No orders selected for reorder.');\n      return;\n    }\n\n    // Pass the selected order IDs to the cart page for reordering\n    this.router.navigate(['/cart'], { queryParams: { orderIds: this.selectedOrderIds.join(',') } });\n  }\n}\n","<table class=\"table table-dark\">\n    <thead>\n      <tr>\n       \n      \n        <th scope=\"col\">Order Id</th>\n        <th scope=\"col\">MenuItem Id</th>\n        <th scope=\"col\">Restaurant Id</th>\n        <th scope=\"col\">Total Cost</th>\n        <th scope=\"col\">Delivery Address</th>\n        <th scope=\"col\">Delivery Time</th>\n        <th scope=\"col\">Status</th>\n\n      </tr>\n    </thead>\n    <tbody>\n      <!-- <tr *ngFor=\"let customer of customers\"> -->\n       <tr *ngFor=\"let order of order\" >\n      \n       \n        <td>{{order.orderId}}</td>\n        <td>{{order.menuItemId}}</td>\n        <td>{{order.restaurantId}}</td>\n        <td>{{order.totalCost}}</td>\n        <td>{{order.deliveryAddress}}</td>\n        <td>{{order.deliveryTime}}</td>\n        <td>{{order.status}}</td>\n        <td><button (click)=\"reorder()\" class=\"btn-btn-primary\">Update</button>\n          \n        </td>\n       \n          \n        \n      </tr>\n      \n       </tbody>\n  </table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}