{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"https://8081-eaeeecbfecacfcdbccbacbfccbbebfcae.project.examly.io/customer\";\n  }\n  getCustomerById(id) {\n    return this.http.get(`${this.baseURL}/${id}`);\n  }\n  updateCustomer(id, customer) {\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\n    return this.http.post(`${this.baseURL}/updateprofile`, JSON.stringify(customer), {\n      headers: headers\n    });\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","CustomerService","constructor","http","baseURL","getCustomerById","id","get","updateCustomer","customer","headers","set","post","JSON","stringify","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/customer.service.ts"],"sourcesContent":["import { HttpClient , HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Customer } from './customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n   private baseURL=\"https://8081-eaeeecbfecacfcdbccbacbfccbbebfcae.project.examly.io/customer\";\n  constructor(private http:HttpClient) { }\n\n  getCustomerById(id:number):Observable<Customer> \n  {\n     return this.http.get<Customer>(`${this.baseURL}/${id}`);\n  }\n  \n\n  \n  \n  updateCustomer(id:number,customer:Customer): any{\n    let headers = new HttpHeaders().set('Content-Type','application/json')\n    return this.http.post(`${this.baseURL}/updateprofile`,JSON.stringify(customer),{headers : headers});\n  }\n}\n"],"mappings":"AAAA,SAAsBA,WAAW,QAAQ,sBAAsB;;;AAQ/D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADf,KAAAC,OAAO,GAAC,2EAA2E;EACrD;EAEvCC,eAAeA,CAACC,EAAS;IAEtB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,IAAIE,EAAE,EAAE,CAAC;EAC1D;EAKAE,cAAcA,CAACF,EAAS,EAACG,QAAiB;IACxC,IAAIC,OAAO,GAAG,IAAIV,WAAW,EAAE,CAACW,GAAG,CAAC,cAAc,EAAC,kBAAkB,CAAC;IACtE,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACR,OAAO,gBAAgB,EAACS,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,EAAC;MAACC,OAAO,EAAGA;IAAO,CAAC,CAAC;EACrG;;AAfWT,eAAe,C;mBAAfA,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfjB,eAAe,C;SAAfA,eAAe;EAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}