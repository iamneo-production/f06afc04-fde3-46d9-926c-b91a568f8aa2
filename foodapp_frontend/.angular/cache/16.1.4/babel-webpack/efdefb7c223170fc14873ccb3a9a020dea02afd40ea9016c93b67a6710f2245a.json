{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RestaurantlistComponent = class RestaurantlistComponent {\n  constructor(restaurantdata, route, router) {\n    this.restaurantdata = restaurantdata;\n    this.route = route;\n    this.router = router;\n    this.restaurant = [];\n    this.searchText = '';\n    this.cuisineType = '';\n    this.route.queryParams.subscribe(params => {\n      this.searchText = params['search'] || '';\n      this.cuisineType = params['cuisineType'] || '';\n      this.getRestaurants();\n    });\n  }\n  getRestaurants() {\n    this.restaurantdata.restaurants().subscribe(data => {\n      if (this.searchText.trim() === '') {\n        if (this.cuisineType.trim() !== '') {\n          this.restaurant = data.filter(item => item.cuisinetype.toLowerCase().includes(this.cuisineType.toLowerCase()));\n        } else {\n          this.restaurant = data;\n        }\n      } else {\n        const searchResultByName = data.filter(item => item.name.toLowerCase().includes(this.searchText.toLowerCase()));\n        const searchResultByCuisine = data.filter(item => item.cuisinetype.toLowerCase().includes(this.searchText.toLowerCase()));\n        // Merge both search results (removing duplicates)\n        this.restaurant = [...new Set([...searchResultByName, ...searchResultByCuisine])];\n      }\n    });\n  }\n  onclick(id) {\n    this.router.navigate(['/menu', id]);\n  }\n};\nRestaurantlistComponent = __decorate([Component({\n  selector: 'app-restaurantlist',\n  templateUrl: './restaurantlist.component.html',\n  styleUrls: ['./restaurantlist.component.css']\n})], RestaurantlistComponent);","map":{"version":3,"names":["Component","RestaurantlistComponent","constructor","restaurantdata","route","router","restaurant","searchText","cuisineType","queryParams","subscribe","params","getRestaurants","restaurants","data","trim","filter","item","cuisinetype","toLowerCase","includes","searchResultByName","name","searchResultByCuisine","Set","onclick","id","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/restaurantlist/restaurantlist.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestaurantdataService } from '../restaurantdata.service';\nimport { Restaurant } from '../restaurant.model';\n\n@Component({\n  selector: 'app-restaurantlist',\n  templateUrl: './restaurantlist.component.html',\n  styleUrls: ['./restaurantlist.component.css']\n})\nexport class RestaurantlistComponent {\n  restaurant: Restaurant[] = [];\n  searchText = '';\n  cuisineType = '';\n\n  constructor(\n    private restaurantdata: RestaurantdataService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe(params => {\n      this.searchText = params['search'] || '';\n      this.cuisineType = params['cuisineType'] || '';\n      this.getRestaurants();\n    });\n  }\n\n  getRestaurants() {\n    this.restaurantdata.restaurants().subscribe((data: any) => {\n      if (this.searchText.trim() === '') {\n        if (this.cuisineType.trim() !== '') {\n          this.restaurant = data.filter((item: Restaurant) => item.cuisinetype.toLowerCase().includes(this.cuisineType.toLowerCase()));\n        } else {\n          this.restaurant = data;\n        }\n      } else {\n        const searchResultByName = data.filter((item: Restaurant) =>\n          item.name.toLowerCase().includes(this.searchText.toLowerCase())\n        );\n\n        const searchResultByCuisine = data.filter((item: Restaurant) =>\n          item.cuisinetype.toLowerCase().includes(this.searchText.toLowerCase())\n        );\n\n        // Merge both search results (removing duplicates)\n        this.restaurant = [...new Set([...searchResultByName, ...searchResultByCuisine])];\n      }\n    });\n  }\n\n  onclick(id: number) {\n    this.router.navigate(['/menu', id]);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAKlCC,YACUC,cAAqC,EACrCC,KAAqB,EACrBC,MAAc;IAFd,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,UAAU,GAAiB,EAAE;IAC7B,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,EAAE;IAOd,IAAI,CAACJ,KAAK,CAACK,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACJ,UAAU,GAAGI,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;MACxC,IAAI,CAACH,WAAW,GAAGG,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE;MAC9C,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACT,cAAc,CAACU,WAAW,EAAE,CAACH,SAAS,CAAEI,IAAS,IAAI;MACxD,IAAI,IAAI,CAACP,UAAU,CAACQ,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,IAAI,IAAI,CAACP,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE,EAAE;UAClC,IAAI,CAACT,UAAU,GAAGQ,IAAI,CAACE,MAAM,CAAEC,IAAgB,IAAKA,IAAI,CAACC,WAAW,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACZ,WAAW,CAACW,WAAW,EAAE,CAAC,CAAC;SAC7H,MAAM;UACL,IAAI,CAACb,UAAU,GAAGQ,IAAI;;OAEzB,MAAM;QACL,MAAMO,kBAAkB,GAAGP,IAAI,CAACE,MAAM,CAAEC,IAAgB,IACtDA,IAAI,CAACK,IAAI,CAACH,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACb,UAAU,CAACY,WAAW,EAAE,CAAC,CAChE;QAED,MAAMI,qBAAqB,GAAGT,IAAI,CAACE,MAAM,CAAEC,IAAgB,IACzDA,IAAI,CAACC,WAAW,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACb,UAAU,CAACY,WAAW,EAAE,CAAC,CACvE;QAED;QACA,IAAI,CAACb,UAAU,GAAG,CAAC,GAAG,IAAIkB,GAAG,CAAC,CAAC,GAAGH,kBAAkB,EAAE,GAAGE,qBAAqB,CAAC,CAAC,CAAC;;IAErF,CAAC,CAAC;EACJ;EAEAE,OAAOA,CAACC,EAAU;IAChB,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,EAAED,EAAE,CAAC,CAAC;EACrC;CACD;AA3CYzB,uBAAuB,GAAA2B,UAAA,EALnC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW9B,uBAAuB,CA2CnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}