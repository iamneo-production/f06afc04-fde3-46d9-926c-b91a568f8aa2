{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../menu/menu.service\";\nexport class CartService {\n  constructor(menuService) {\n    this.menuService = menuService;\n    this.items = [];\n    this.total = 0;\n    this.finaltotal = 0;\n    this.cusId = 0;\n  }\n  // addToCart(item:any): void {\n  //   let existingItem = this.items.find((x: { name: any; }) => x.name === item.name);\n  //   if (existingItem) {\n  //     existingItem.quantity++;\n  //   } else {\n  //     item.quantity = 1;\n  //     this.items.push(item);\n  //   }\n  //   this.total += item.price;\n  //   console.log(\"Item added to cart: \", item);\n  //   console.log(\"Total after adding item: \", this.total);\n  // }\n  // getItems() {\n  //   // return a default item to display in the cart\n  //   return [\n  //     { id: 1, name: 'Pizza', price: 9.99, quantity: 0 },\n  //     { id: 2, name: 'Burger', price: 6.99, quantity: 0 },\n  //     { id: 3, name: 'Fries', price: 3.99, quantity: 0 }\n  //   ];\n  // }\n  getTotal() {\n    console.log(\"Current total: \", this.total);\n    return this.total;\n  }\n  incrementItemQuantity(item) {\n    item.quantity++;\n    this.total += item.price;\n  }\n  decrementItemQuantity(item) {\n    if (item.quantity > 0) {\n      item.quantity--;\n      this.total -= item.price;\n    } else {\n      this.menuService.removeItem(item.id);\n    }\n  }\n  removeItem(item) {\n    let index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n      this.total -= item.price * item.quantity;\n    }\n  }\n  finalAmount(discountvalue, deliveryCharge) {\n    this.finaltotal = this.menuService.getTotalAmount() - discountvalue + deliveryCharge;\n    return this.finaltotal;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.MenuService));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","menuService","items","total","finaltotal","cusId","getTotal","console","log","incrementItemQuantity","item","quantity","price","decrementItemQuantity","removeItem","id","index","indexOf","splice","finalAmount","discountvalue","deliveryCharge","getTotalAmount","i0","ɵɵinject","i1","MenuService","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/cart/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MenuService } from '../menu/menu.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  items:any = [];\n  total = 0;\n  finaltotal=0;\n  cusId=0;\n\n  constructor(private menuService:MenuService) { }\n  \n\n  // addToCart(item:any): void {\n  //   let existingItem = this.items.find((x: { name: any; }) => x.name === item.name);\n  //   if (existingItem) {\n  //     existingItem.quantity++;\n  //   } else {\n  //     item.quantity = 1;\n  //     this.items.push(item);\n  //   }\n  //   this.total += item.price;\n  //   console.log(\"Item added to cart: \", item);\n  //   console.log(\"Total after adding item: \", this.total);\n  // }\n  \n\n  // getItems() {\n  //   // return a default item to display in the cart\n  //   return [\n  //     { id: 1, name: 'Pizza', price: 9.99, quantity: 0 },\n  //     { id: 2, name: 'Burger', price: 6.99, quantity: 0 },\n  //     { id: 3, name: 'Fries', price: 3.99, quantity: 0 }\n  //   ];\n  // }\n\n  getTotal(): number {\n  console.log(\"Current total: \", this.total);\n  return this.total;\n}\n\n  incrementItemQuantity(item:any): void {\n    item.quantity++;\n    this.total += item.price;\n  }\n\n  decrementItemQuantity(item:any): void {\n    if(item.quantity>0)\n    {item.quantity--;\n    this.total -= item.price;}\n    else {\n      this.menuService.removeItem(item.id);\n    }\n  \n  }\n\n  removeItem(item:any): void {\n    let index = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n      this.total -= (item.price * item.quantity);\n      \n    }\n  }\n\n\n  \n\n  \n  finalAmount(discountvalue:number,deliveryCharge:number):number{\n    this.finaltotal= this.menuService.getTotalAmount()-discountvalue+deliveryCharge;\n    return this.finaltotal;\n  }\n  \n}"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAMtBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,KAAK,GAAO,EAAE;IACd,KAAAC,KAAK,GAAG,CAAC;IACT,KAAAC,UAAU,GAAC,CAAC;IACZ,KAAAC,KAAK,GAAC,CAAC;EAEwC;EAG/C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,QAAQA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACL,KAAK,CAAC;IAC1C,OAAO,IAAI,CAACA,KAAK;EACnB;EAEEM,qBAAqBA,CAACC,IAAQ;IAC5BA,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACR,KAAK,IAAIO,IAAI,CAACE,KAAK;EAC1B;EAEAC,qBAAqBA,CAACH,IAAQ;IAC5B,IAAGA,IAAI,CAACC,QAAQ,GAAC,CAAC,EAClB;MAACD,IAAI,CAACC,QAAQ,EAAE;MAChB,IAAI,CAACR,KAAK,IAAIO,IAAI,CAACE,KAAK;KAAE,MACrB;MACH,IAAI,CAACX,WAAW,CAACa,UAAU,CAACJ,IAAI,CAACK,EAAE,CAAC;;EAGxC;EAEAD,UAAUA,CAACJ,IAAQ;IACjB,IAAIM,KAAK,GAAG,IAAI,CAACd,KAAK,CAACe,OAAO,CAACP,IAAI,CAAC;IACpC,IAAIM,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACd,KAAK,CAACgB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC3B,IAAI,CAACb,KAAK,IAAKO,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACC,QAAS;;EAG9C;EAMAQ,WAAWA,CAACC,aAAoB,EAACC,cAAqB;IACpD,IAAI,CAACjB,UAAU,GAAE,IAAI,CAACH,WAAW,CAACqB,cAAc,EAAE,GAACF,aAAa,GAACC,cAAc;IAC/E,OAAO,IAAI,CAACjB,UAAU;EACxB;;AApEWL,WAAW,C;mBAAXA,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAX3B,WAAW,C;SAAXA,WAAW;EAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}