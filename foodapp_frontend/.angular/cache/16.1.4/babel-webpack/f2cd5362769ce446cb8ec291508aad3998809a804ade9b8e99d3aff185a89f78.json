{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../customer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ProfileComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_tr_12_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateCustomer(ctx_r1.customer.id));\n    });\n    i0.ɵɵtext(9, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.customer.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.customer.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\" \", ctx_r0.customer.addressId.street, \", \", ctx_r0.customer.addressId.city, \", \", ctx_r0.customer.addressId.state, \", \", ctx_r0.customer.addressId.zipCode, \" \");\n  }\n}\nexport class ProfileComponent {\n  constructor(service, router, activatedRoute) {\n    this.service = service;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.customer = null;\n  }\n  ngOnInit() {\n    this.loadCustomer();\n  }\n  loadCustomer() {\n    const customerId = Number(this.activatedRoute.snapshot.paramMap.get(\"id\"));\n    this.service.getCustomerById(customerId).subscribe(customer => {\n      this.customer = customer;\n    }, error => {\n      console.error('Error fetching customer:', error);\n    });\n  }\n  updateCustomer(id) {\n    this.router.navigate(['update-customer', id]);\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[\"scope\", \"col\"], [4, \"ngIf\"], [1, \"btn-btn-primary\", 3, \"click\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\", 0);\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 0);\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 0);\n      i0.ɵɵtext(8, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, ProfileComponent_tr_12_Template, 10, 6, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.customer);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"table[_ngcontent-%COMP%]{\\n    background-color: red;\\n    color: white;\\n    text-align: center;\\n    justify-content: center;\\n    margin-left: auto;\\n    margin-right: auto;\\n    width: 1000px;\\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixhQUFhOztBQUVqQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB3aWR0aDogMTAwMHB4O1xuXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProfileComponent_tr_12_Template_button_click_8_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","updateCustomer","customer","id","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","name","email","ɵɵtextInterpolate4","addressId","street","city","state","zipCode","ProfileComponent","constructor","service","router","activatedRoute","ngOnInit","loadCustomer","customerId","Number","snapshot","paramMap","get","getCustomerById","subscribe","error","console","navigate","ɵɵdirectiveInject","i1","CustomerService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵtemplate","ProfileComponent_tr_12_Template","ɵɵproperty"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/profile/profile.component.ts","/home/coder/project/workspace/foodapp_frontend/src/app/profile/profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n  customer: Customer | null = null;\n  constructor(private service:CustomerService,private router:Router, private activatedRoute : ActivatedRoute){}  \n  ngOnInit(): void {\n    this.loadCustomer();\n  }\n\n  loadCustomer(): void {\n    const customerId = Number(this.activatedRoute.snapshot.paramMap.get(\"id\"));\n\n    this.service.getCustomerById(customerId).subscribe(\n      (customer) => {\n        this.customer = customer;\n      },\n      (error) => {\n        console.error('Error fetching customer:', error);\n      }\n    );\n  }\n\nupdateCustomer(id:number){\n  this.router.navigate(['update-customer', id]);\n}\n\n\n}\n\n","\n<table >\n    <thead>\n      <tr>\n       \n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Address</th>\n  \n        <th >Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n       <tr *ngIf=\"customer\">\n        \n        <td>{{customer.name}}</td>\n        <td>{{customer.email}}</td>\n        <td>\n            {{ customer.addressId.street}},\n            {{ customer.addressId.city }},\n            {{ customer.addressId.state }},\n            {{ customer.addressId.zipCode }}\n            <!-- Add more list items as needed -->\n          \n        </td>\n    \n        <td><button (click)=\"updateCustomer(customer.id)\" class=\"btn-btn-primary\">Update</button>\n            \n        </td>\n      </tr>\n      \n       </tbody>\n  </table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}