{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io/order\";\n  }\n  getOrderByCustomerId(customerId) {\n    return this.http.get(`${this.baseURL}/customerId/${customerId}`);\n  }\n  orderhistory() {\n    return this.http.get(`${this.baseURL}`);\n  }\n  createOrder(newOrder) {\n    return this.http.post(`${this.baseURL}`, newOrder);\n  }\n  reorderItems(order, customerId) {\n    // Assuming you have an API endpoint in the backend to initiate the reorder process\n    return this.http.post(`${this.baseURL}/reorder/${customerId}`, order);\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["OrderService","constructor","http","baseURL","getOrderByCustomerId","customerId","get","orderhistory","createOrder","newOrder","post","reorderItems","order","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/foodapp_frontend/src/app/order.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {  Observable } from 'rxjs';\nimport { Order } from './order.model';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  private baseURL = \"https://8080-cdcccaeacaaacfcdbccbacbfccbbebfcae.project.examly.io/order\";\n  \n \n\n\n  constructor(private http:HttpClient) { }\n\n  getOrderByCustomerId(customerId:number):Observable<Order[]> \n  {\n     return this.http.get<Order[]>(`${this.baseURL}/customerId/${customerId}`);\n  }\n\n  orderhistory(): Observable<Order[]> {\n    return this.http.get<Order[]>(`${this.baseURL}`);\n  }\n\n  createOrder(newOrder: any): Observable<any> {\n    return this.http.post<any>(`${this.baseURL}`, newOrder);\n  }\n  reorderItems(order: any, customerId:number): Observable<number> {\n    // Assuming you have an API endpoint in the backend to initiate the reorder process\n    return this.http.post<number>(`${this.baseURL}/reorder/${customerId}`, order);\n\n  \n}\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,YAAY;EAOvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,OAAO,GAAG,yEAAyE;EAKpD;EAEvCC,oBAAoBA,CAACC,UAAiB;IAEnC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,OAAO,eAAeE,UAAU,EAAE,CAAC;EAC5E;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,OAAO,EAAE,CAAC;EAClD;EAEAK,WAAWA,CAACC,QAAa;IACvB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,EAAE,EAAEM,QAAQ,CAAC;EACzD;EACAE,YAAYA,CAACC,KAAU,EAAEP,UAAiB;IACxC;IACA,OAAO,IAAI,CAACH,IAAI,CAACQ,IAAI,CAAS,GAAG,IAAI,CAACP,OAAO,YAAYE,UAAU,EAAE,EAAEO,KAAK,CAAC;EAGjF;;AA1BaZ,YAAY,C;mBAAZA,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZhB,YAAY,C;SAAZA,YAAY;EAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}